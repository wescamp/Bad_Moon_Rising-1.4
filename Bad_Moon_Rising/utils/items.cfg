#textdomain wesnoth-Bad_Moon_Rising

#define FLAMES X Y

	[event]
	name=prestart
        [item]
                x,y={X},{Y}
                halo=scenery/fire1.png:200,scenery/fire2.png:200,scenery/fire3.png:200,scenery/fire4.png:200,scenery/fire5.png,scenery/fire6.png:200,scenery/fire7.png:200,scenery/fire8.png:200   
        [/item]
	[/event]

	[event]
	name=moveto
	first_time_only=no
	    [filter]
		x,y={X},{Y}
	    [/filter]
	[object]
	    [filter]
		x,y={X},{Y}
	    [/filter]
	silent=yes
	[effect]
	    apply_to=hitpoints
	    increase=-4
	[/effect]
	[/object]
	    [sound]
	    name="fire.wav"
	    [/sound]
	[/event]

	[event]
	name=moveto
	[filter]
	side=1
	x,y={X},{Y}
	[/filter]
	[message]
	speaker=narrator
	message= _ "Do not stand in the fire!"
	    image=wesnoth-icon.png
	[/message]
	[/event]
#enddef

#define DOG_WOOF X Y 
    [event]
    name=moveto
	[filter]
	side=1
	type=Ukian Dog
	x,y={X},{Y}
	[/filter]
	[message]
	speaker=unit
	message= _ "Woof!"
	[/message]
    [/event]
#enddef	

#define OBJ_RING_ANCIENT X Y ID
    [item]
        x={X}
        y={Y}
        image=items/ring-brown.png
    [/item]

    [event]
        name=moveto
        first_time_only=no
        [filter]
	    side=1
            x={X}
            y={Y}
	    [not]
	    type=Ukian Dog
	    [/not]
        [/filter]
        [object]
            id={ID}
            name= _ "Ancient Ring"
            image=items/ring-brown.png
            duration=forever
            description= _ "This tarnished ring gives the wearer a strength and hardiness from an age of heroes."
            cannot_use_message=NONE
            [filter]
                x={X}
                y={Y}
            [/filter]
            [then]
                [removeitem]
                    x,y={X},{Y}
                [/removeitem]
            [/then]
            [effect]
                apply_to=attack
		range=melee
                increase_damage=2
            [/effect]
            [effect]
                apply_to=hitpoints
                increase_total=10
            [/effect]
        [/object]
    [/event]
#enddef

#define SCARRION_HOP YOLD XNEW YNEW

        [event]
        name=attack_end
        [filter]
        side=1
        [/filter]
        [filter_second]
        description=Scarrion
        [/filter_second]
            [if]
            [filter]
            y={YOLD}
            [/filter]
            [then]
            {FLASH_BLUE (
                [teleport]
                [filter]
                description=Scarrion
                [/filter]
                x={XNEW}
                y={YNEW}
                [/teleport]
            )}
        [redraw]
        [/redraw]
        [/then]
        [/if]
        [/event]
#enddef

# Borrowed from Saving Elensefar macro GIVE_EXP
#define SKIRMISHEXP
        [store_unit]
            [filter]
                side=1
                x=1-20
                y=1-20
            [/filter]
            variable=giveex
        [/store_unit]
        {FOREACH giveex X}
        [set_variable]
            name=giveex[$X].experience
            add=10
        [/set_variable]
        [unstore_unit]
            variable=giveex[$X]
        [/unstore_unit]
        {NEXT X}
        [clear_variable]
            name=giveex
        [/clear_variable]
#enddef

#define ISSPECIAL X Y
        [unit_overlay]
            x={X}
            y={Y}
            image=misc/is_special.png
        [/unit_overlay]
#enddef


#define RANDTERRAIN N A B
	# randomly change hexes of terrain A to terrain B, N times
	# a modification of the SCATTER_IMAGE macro	
    [store_locations]
        terrain={A}
        variable=random_placement_locations
    [/store_locations]

    {VARIABLE_OP random_string format "0..$random_placement_locations.length"}

    {VARIABLE REPEAT_i 0}

    [while]
        [variable]
            name=REPEAT_i
            less_than={N}
        [/variable]

        [do]
            {RANDOM $random_string}

            {VARIABLE_OP random_placement_x format "$random_placement_locations[$random].x"}
            {VARIABLE_OP random_placement_y format "$random_placement_locations[$random].y"}

            [terrain]
                terrain={B}
                x,y=$random_placement_x,$random_placement_y
            [/terrain]

            {VARIABLE_OP REPEAT_i add 1}
        [/do]
    [/while]

    {CLEAR_VARIABLE REPEAT_i}

    {CLEAR_VARIABLE random_placement_locations}	
#enddef

#define SCATTER_FOES XMIN XMAX YMIN YMAX TYPE NUM SIDE
    # Scatter NUM foes of type TYPE for SIDE, in the range XMIN-XMAX etc
       {REPEAT {NUM} (
                [set_variable]
                name=randposx
                random={XMIN}..{XMAX}
                [/set_variable]
                [set_variable]
                name=randposy
                random={YMIN}..{YMAX}
                [/set_variable]
 # added the condition so that enemies are not placed on encampment
		[if]
		    [filter_location]
		    x,y=$randposx,$randposy
		    [not]
		    terrain=Ce
		    [/not]
		    [/filter_location]
		[then]
                    [unit]
                    type={TYPE}
                    side={SIDE}
                    x,y=$randposx,$randposy
                    generate_description=yes
                    [/unit]
		[/then]
		[/if]
        {CLEAR_VARIABLE randposx}
        {CLEAR_VARIABLE randposy}
        )}

#enddef 

#define SKIRMISH_MASK X Y 
    # Terrain mask to make castle, set at X Y

	[terrain_mask]
	x,y={X},{Y}
	mask="usage=mask
border=0

_f,    _f,    Ce,    Ce,    _f,    _f
_f,    Ce,   1 Ke,    Ce,    _f,    _f
"
	[/terrain_mask]

#enddef


#define MIN_COST_ROAD TERRAIN
    [road_cost]
        terrain={TERRAIN}
        cost=2
        convert_to={TERRAIN}
    [/road_cost]
#enddef

#define BMR_RIDERS INDEX

        [store_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            variable=rider_TEMP
            kill=yes
        [/store_unit]
 # Store the unit type for later
	[set_variable]
	name=rider_HOLD_{INDEX}
	value=$rider_TEMP.type
	[/set_variable]
 # Remember to clear the above when you're done
	[set_variable]
	name=rider_TEMP.type
	value=Ukian Horseman
	[/set_variable]
	[set_variable]
	name=rider_TEMP.moves
	value=$rider_TEMP.max_moves
	[/set_variable]
	[unstore_unit]
	variable=rider_TEMP
	[/unstore_unit]
	{CLEAR_VARIABLE rider_TEMP}

#enddef

